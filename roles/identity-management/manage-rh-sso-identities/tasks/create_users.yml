---

- name: "Get Red Hat SSO access token"
  include_tasks: access-token.yml

- name: "Retrieve template for user manipulation"
  set_fact:
    sso_user_json: "{{ lookup('template', 'manage-users.json.j2') | to_json }}"

- name: "Get existing users"
  uri:
    url: "http://{{ rh_sso_host }}:{{ rh_sso_port }}/auth/admin/realms/master/users"
    method: GET
    headers:
      Authorization: "Bearer {{ rh_sso_token.json.access_token }}"
  register: existing_users

- name: "Search for the user ID to determine if the user exists"
  set_fact:
    user_id: "{{ existing_users.json | json_query(get_user_id) }}"
  vars:
    get_user_id: "[? username=='{{ user_data.user_name }}'].{id:id}"

- name: "Create user"
  uri:
    url: "http://{{ rh_sso_host }}:{{ rh_sso_port }}/auth/admin/realms/master/users"
    method: POST
    body: "{{ sso_user_json }}" 
    body_format: json
    status_code: 201
    headers:
      Content-type: "application/json"
      Accept: "application/json"
      Authorization: "Bearer {{ rh_sso_token.json.access_token }}"
  when: user_id[0] is not defined

- name: "Update user"
  uri:
    url: "http://{{ rh_sso_host }}:{{ rh_sso_port }}/auth/admin/realms/master/users/{{ user_id[0].id }}"
    method: PUT
    body: "{{ sso_user_json }}" 
    body_format: json
    status_code: 201, 204
    headers:
      Content-type: "application/json"
      Accept: "application/json"
      Authorization: "Bearer {{ rh_sso_token.json.access_token }}"
  when: user_id[0] is defined
