- debug:
    msg: "{{ realm_clients }}"

- name: "Get Client ID"
  set_fact:
    client_id: "{{ realm_clients.json | json_query(query) | first }}"
  vars:
    query: "[?clientId=='{{ item.client }}'].id"

- debug:
    msg: "{{ client_id }}"

- name: "Get Client Roles"
  uri:
    url: "{{ rh_sso_protocol }}://{{ rh_sso_host }}:{{ rh_sso_port }}/auth/admin/realms/{{ user_data.realm | mandatory }}/clients/{{ client_id }}/roles"
    method: GET
    headers:
      Authorization: "Bearer {{ rh_sso_token.json.access_token }}"
    validate_certs: "{{ rh_sso_ssl_cert_validation | default(omit) }}"
  register: client_roles

- debug:
    msg: "{{ client_roles }}"

- name: "Get Client Role ID"
  set_fact:
    client_role_id: "{{ client_roles.json | json_query(query) | first }}"
  vars:
    query: "[?name=='{{ item.role }}'].id"

- debug:
    msg: "{{ client_role_id }}"

- name: "Add Client Role Mappings"
  uri:
    url: "{{ rh_sso_protocol }}://{{ rh_sso_host }}:{{ rh_sso_port }}/auth/admin/realms/{{ user_data.realm | mandatory }}/users/{{ user_id }}/role-mappings/clients/{{ client_id }}"
    method: POST
    body:
      [ 
        {
          id: "{{ client_role_id }}",
          name: "{{ item.role }}",
          clientRole: true,
          containerId: "ef26bafa-ed79-4fb8-9cb5-287ac2e85005",
        }
      ]
    body_format: json
    status_code: 204
    headers:
      Authorization: "Bearer {{ rh_sso_token.json.access_token }}"
    validate_certs: "{{ rh_sso_ssl_cert_validation | default(omit) }}"

