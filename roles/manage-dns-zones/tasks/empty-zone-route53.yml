---
#- debug:
#    msg: 
#      - "r53_zone: {{ r53_zone }}"
#      - "item.0.zone: {{ item.0.zone }}"
#      - "r53_rcord: {{ r53_record}}"
#      - "item.1.hostname: {{ item.1.hostname }}"

- name: "Remove records in zone"
  debug:
    msg: 
      - "r53_zone: {{ r53_zone }}"
      - "item.zone: {{ item.zone }}"
      - "r53_record: {{ r53_record}}"
      #- "Removing record: {{ r53_zone.Name }} {{ r53_record.Name }}"
  with_items: 
    - "{{ dns_records_rm }}"
  #when:
  #  - r53_zone.Name == item.0.zone
  #- r53_record.Name == item.1.hostname

#---
#- name: Ensure the Zone has no records
#  debug:
#    msg: "Removing record: {{ r53.1.Value }}"
#  with_subelements:
#    - "{{ dns_records_rm }}"
#    - entries
#  when:
#    - r53.1.Value == item.1.ip
#    - r53.0.Name == item.0.zone

#- name: Ensure the Zone has no rec
#  route53:
#    aws_access_key: "{{ aws_access_key }}"
#    aws_secret_key: "{{ aws_secret_key }}"
#    zone: "{{ item.0.zone }}"
#    record: "{{ item.1.Name }}"
#    type: "{{ item.1.Type }}"
#    #value: "{{ item.1.value }}"
#    state: absent
#  with_together:
#    - "{{ dns_records_rm | default({}) }}"
#    - "{{ zones_records.results[0].ResourceRecordSets }}"

#And I want to remove any entry from *zones_records.results[0].ResourceRecordSets.Name* 
#when *zones_records.results[1].item.Name* matches *dns_records_rm.zone