---

- name: Build a list of view/zone items
  set_fact:
    dns_views: "{{ dns_views | default([]) + [ { 'name': item.0.name + '-' + item.1.dns_domain } ] }}"
  with_subelements:
    - "{{ dns_data.views }}"
    - zones

- name: Initialize dictionary for nsupdate keys
  set_fact:
    nsupdate_keys: {}

- name: Get existing key files
  find:
    paths: /var/named
    patterns: '*.key'
  register: key_files

- block:
  - slurp:
      src: "{{ item.path }}"
    register: keyfilescontent
    with_items:
      - "{{ key_files.files }}"

  - set_fact:
      nsupdate_keys: "{{ nsupdate_keys | \
             combine( \
               item['content'] | b64decode | \
                 replace('\n', '') | \
                 regex_replace('^key (\\S+).+?algorithm (\\S+);.+?secret \"(.+?)\";.*',
                               '{ \"\\1\" : { \"changed\": false, \"key_algorithm\": \"\\2\", \"key_secret\": \"\\3\" }}') | \
                 from_json \
              )}}"
    with_items:
    - "{{ keyfilescontent.results }}"

  when:
    - key_files|length > 0 

- name: Ensure target directory exists for archived files
  file:
    path: "/var/named/key-archive"
    state: directory

- name: Generate keys for nsupdate
  command: >
    /sbin/dnssec-keygen
      -a {{ dnssec_keygen_algorithm }}
      -b {{ dnssec_keygen_size }}
      -n USER
      -r /dev/urandom
      -K /var/named/key-archive {{ item.name }}
  with_items:
    - "{{ dns_views }}"
  when:
    - item.name not in nsupdate_keys
  register: dnssec_keygen_command_output

- block:
  - name: Gather keys for nsupdate
    shell: "grep Key: /var/named/key-archive/{{ item.stdout }}.private | cut -d ' ' -f 2"
    register: nsupdate_keys_captured
    with_items:
      - "{{ dnssec_keygen_command_output.results }}"
    when:
      - item.changed

  # Build the dict with the proper keys, i.e.:
  #    private-view.example.com:
  #      algorithm: HMAC-MD5
  #      secret: SKqKNdpfk7llKxZ57bbxUnUDobaaJp9t8CjXLJPl+fRI5mPcSBuxTAyvJPa6Y9R7vUg9DwCy/6WTpgLNqnV4Hg==
  #    public-view.example.com:
  #      algorithm: HMAC-MD5
  #      secret: kVE2bVTgZjrdJipxPhID8BEZmbHD8cExlVPR+zbFpW6la8kL5wpXiwOh8q5AAosXQI5t95UXwq3Inx8QT58duw==
  - name: Set nsupdate_keys fact
    set_fact:
      nsupdate_keys: "{{ nsupdate_keys | \
                         combine({ \
                                   item.item.item.name : \
                                   { \
                                     'changed': true, \
                                     'key_algorithm': dnssec_keygen_algorithm, \
                                     'key_secret': item.stdout \
                                   } \
                                 }) \
                      }}"
    with_items:
      - "{{ nsupdate_keys_captured.results }}"
    when:
      - item.changed

  when:
    - dnssec_keygen_command_output.changed

