---

- name: "Apply workaround fix for Route53 TXT records"
  set_fact:
    record_value: "{{ (item.type == 'TXT') | ternary('\"' + item.value + '\"', item.value) }}"
  when:
    - item.value is defined

- route53:
    alias: "{{ item.alias | default(omit) }}"
    alias_evaluate_target_health: "{{ item.alias_evaluate_target_health | default(omit) }}"
    alias_hosted_zone_id: "{{ dns.1.route53.alias_hosted_zone_id | default(omit) }}"
    failover: "{{ item.failover | default(omit) }}"
    health_check: "{{ item.health_check | default(omit) }}"
    hosted_zone_id: "{{ dns.1.route53.hosted_zone_id | default(omit) }}"
    identifier: "{{ item.identifier | default(omit) }}"
    overwrite: "{{ item.overwrite | default(omit) }}"
    private_zone: "{{ dns.1.route53.private_zone | default(omit) }}"
    profile: "{{ dns.1.route53.profile | default(omit) }}"
    record: "{{ item.record }}"
    region: "{{ dns.1.route53.region | default(item.region) | default(omit) }}"
    retry_internal: "{{ dns.1.route53.retry_interval | default(omit) }}"
    state: "{{ item.state | default('present') }}"
    ttl: "{{ item.ttl | default(omit) }}"
    type: "{{ item.type }}"
    validate_certs: "{{ dns.1.route53.validate_certs | default(omit) }}"
    value: '{{ record_value | default(omit) }}'
    vpc_id: "{{ dns.1.route53.vpc_id | default(omit) }}"
    wait: "{{ dns.1.route53.wait | default(item.wait) | default(omit) }}"
    wait_timeout: "{{ dns.1.route53.wait_timeout | default(item.wait_timeout) | default(omit) }}"
    weight: "{{ item.weight | default(omit) }}"
    zone: "{{ dns.1.dns_domain }}"

