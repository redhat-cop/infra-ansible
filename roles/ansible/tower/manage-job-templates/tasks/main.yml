---

- name: "Initilize facts"
  set_fact:
    processed_job_templates: []
    existing_job_templates_output: []
    existing_inventories_output: []
    existing_projects_output: []
    existing_credentials_output: []

# Utilize the `rest_get` library routine to ensure REST pagination is handled
- name: "Get the existing inventories"
  rest_get:
    host_url: "{{ tower_url }}"
    api_uri: "/api/v2/inventories/"
    rest_user: "{{ tower_admin_username }}"
    rest_password: "{{ tower_admin_password }}"
  register: existing_inventories_output

# Utilize the `rest_get` library routine to ensure REST pagination is handled
- name: "Get the existing projects"
  rest_get:
    host_url: "{{ tower_url }}"
    api_uri: "/api/v2/projects/"
    rest_user: "{{ tower_admin_username }}"
    rest_password: "{{ tower_admin_password }}"
  register: existing_projects_output

# Utilize the `rest_get` library routine to ensure REST pagination is handled
- name: "Get the existing job templates"
  rest_get:
    host_url: "{{ tower_url }}"
    api_uri: "/api/v2/job_templates/"
    rest_user: "{{ tower_admin_username }}"
    rest_password: "{{ tower_admin_password }}"
  register: existing_job_templates_output

- name: "Get the existing credentials"
  rest_get:
    host_url: "{{ tower_url }}"
    api_uri: "/api/v2/credentials/"
    rest_user: "{{ tower_admin_username }}"
    rest_password: "{{ tower_admin_password }}"
  register: existing_credentials_output

- name: "Process the inventory job template"
  include_tasks: process-job-template.yml
  with_items:
  - "{{ ansible_tower_job_templates }}"
  loop_control:
    loop_var: job_template

- name: "Elminate the job templates that should not be present"
  uri:
    url: https://localhost/api/v2/job_templates/{{ item.id }}/
    method: DELETE
    user: admin
    password: "{{ tower_admin_password }}"
    validate_certs: no
    status_code: 200,204
  with_items:
  - "{{ existing_job_templates_output.rest_output | get_remaining_items(processed_job_templates, 'name', 'name')}}"
