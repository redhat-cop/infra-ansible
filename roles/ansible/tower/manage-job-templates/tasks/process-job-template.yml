---

- name: "Get the inventory id based on the inventory name"
  set_fact:
    inventory_id: "{{ item.id }}"
  when:
  - item.name|trim == job_template.inventory|trim
  with_items:
  - "{{ existing_inventories_output.rest_output }}"

- name: "Get the project id based on the project name"
  set_fact:
    project_id: "{{ item.id }}"
  when:
  - item.name|trim == job_template.project|trim
  with_items:
  - "{{ existing_projects_output.rest_output }}"

- name: "Get the credential id based on the credential name"
  set_fact:
    credential_id: "{{ item.id }}"
  when:
  - item.name|trim == job_template.credential|trim
  with_items:
  - "{{ existing_credentials_output.rest_output }}"

- name: "Load up the job template"
  uri:
    url: https://localhost/api/v2/job_templates/
    method: POST
    body: "{{ lookup('template', 'job-template.j2') }}"
    body_format: 'json'
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
    user: admin
    password: "{{ tower_admin_password }}"
    validate_certs: no
    status_code: 200,201,400

# Utilize the `rest_get` library routine to ensure REST pagination is handled
- name: "Obtain the current roles"
  rest_get:
    host_url: "{{ tower_url }}"
    api_uri: "/api/v2/roles/"
    rest_user: "{{ tower_admin_username }}"
    rest_password: "{{ tower_admin_password }}"
  register: existing_roles_output

- name: "Assign the Team(s) Permission(s)"
  vars:
    permissions_object: "teams"
    permissions_value: "{{ team }}"
  include_tasks: set-permissions.yml
  when:
  - job_template.permissions is defined 
  - job_template.permissions.teams is defined
  with_items:
  - "{{ job_template.permissions.teams }}"
  loop_control:
    loop_var: team

- name: "Assign the User(s) Permission(s)"
  vars:
    permissions_object: "users"
    permissions_value: "{{ user }}"
  include_tasks: set-permissions.yml
  when:
  - job_template.permissions is defined 
  - job_template.permissions.users is defined
  with_items:
  - "{{ job_template.permissions.users }}"
  loop_control:
    loop_var: user

- name: "Clear/Update facts"
  set_fact:
    inventory_id: ''
    project_id: ''
    processed_job_templates: "{{ processed_job_templates + [ {'name': job_template.name } ] }}"
