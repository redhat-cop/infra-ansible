---

- name: "Set default values"
  set_fact:
    processed_credentials: []
    existing_crede_output: []

# Utilize the `rest_get` library routine to ensure REST pagination is handled
- name: "Get the existing organizations"
  rest_get:
    host_url: "{{ tower_url }}"
    api_uri: "/api/v2/organizations/"
    rest_user: "{{ tower_admin_username }}"
    rest_password: "{{ tower_admin_password }}"
  register: existing_organizations_output

# Utilize the `rest_get` library routine to ensure REST pagination is handled
- name: "Get the existing credentials"
  rest_get:
    host_url: "{{ tower_url }}"
    api_uri: "/api/v2/credentials/"
    rest_user: "{{ tower_admin_username }}"
    rest_password: "{{ tower_admin_password }}"
  register: existing_credentials_output

# Utilize the `rest_get` library routine to ensure REST pagination is handled
- name: "Get the existing credential types"
  rest_get:
    host_url: "{{ tower_url }}"
    api_uri: "/api/v2/credential_types/"
    rest_user: "{{ tower_admin_username }}"
    rest_password: "{{ tower_admin_password }}"
  register: existing_credential_types_output

- name: "Process the inventory credentials"
  include_tasks: process-credential.yml
  with_items:
  - "{{ ansible_tower_credentials }}"
  loop_control:
    loop_var: credential

- name: "Elminate the credentials that should not be present"
  uri:
    url: https://localhost/api/v2/credentials/{{ item.id }}/
    method: DELETE
    user: admin
    password: "{{ tower_admin_password }}"
    validate_certs: no
    status_code: 200,204
  with_items:
  - "{{ existing_credentials_output.rest_output | get_remaining_items(processed_credentials, 'name', 'name')}}"
