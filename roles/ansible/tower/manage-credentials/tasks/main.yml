---

- block: # when ansible_tower.credentials is defined

  - name: "Set default values"
    set_fact:
      processed_credentials: []
      existing_organizations_output: []
      existing_credentials_output: []
      existing_credential_types_output: []

  # Utilize the `rest_get` library routine to ensure REST pagination is handled
  - name: "Get the existing organizations"
    rest_get:
      host_url: "{{ ansible_tower.url | default(default_ansible_tower_url) }}"
      rest_user: "{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}"
      rest_password: "{{ ansible_tower.admin_password }}"
      api_uri: "/api/v2/organizations/"
    register: existing_organizations_output

  # Utilize the `rest_get` library routine to ensure REST pagination is handled
  - name: "Get the existing credentials"
    rest_get:
      host_url: "{{ ansible_tower.url | default(default_ansible_tower_url) }}"
      rest_user: "{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}"
      rest_password: "{{ ansible_tower.admin_password }}"
      api_uri: "/api/v2/credentials/"
    register: existing_credentials_output

  # Utilize the `rest_get` library routine to ensure REST pagination is handled
  - name: "Get the existing credential types"
    rest_get:
      host_url: "{{ ansible_tower.url | default(default_ansible_tower_url) }}"
      rest_user: "{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}"
      rest_password: "{{ ansible_tower.admin_password }}"
      api_uri: "/api/v2/credential_types/"
    register: existing_credential_types_output

  - name: "Process the inventory credentials"
    include_tasks: process-credential.yml
    with_items:
    - "{{ ansible_tower.credentials }}"
    loop_control:
      loop_var: credential

  - name: "Elminate the credentials that should not be present"
    uri:
      url: "{{ ansible_tower.url | default(default_ansible_tower_url) }}/api/v2/credentials/{{ item.id }}/"
      user: "{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}"
      password: "{{ ansible_tower.admin_password }}"
      force_basic_auth: yes
      method: DELETE
      validate_certs: no
      status_code: 200,204
    with_items:
    - "{{ existing_credentials_output.rest_output | get_remaining_items(processed_credentials, 'name', 'name')}}"

  when:
  - ansible_tower.credentials is defined
