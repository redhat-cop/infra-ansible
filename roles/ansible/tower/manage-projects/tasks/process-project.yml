---

- name: "Get the org id based on the org name"
  set_fact:
    org_id: "{{ item.id }}"
  when:
  - item.name|trim == project.organization|trim
  with_items:
  - "{{ existing_organizations_output.rest_output }}"

- name: "Get the credential id based on the credential name"
  block:
  - name: "Get the credential"
    rest_get:
      host_url: "{{ ansible_tower.url | default(default_ansible_tower_url) }}"
      rest_user: "{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}"
      rest_password: "{{ ansible_tower.admin_password }}"
      api_uri: "/api/v2/credentials/?name={{ project.scm_credential_name }}"
    register: r_credential
  - name: "Set credential_id fact"
    set_fact:
      credential_id: "{{ r_credential.rest_output[0].id | int }}"
    when:
    - r_credential.rest_output | length > 0
  when:
  - project.scm_credential_name is defined

- name: "Load up the project"
  uri:
    url: "{{ ansible_tower.url | default(default_ansible_tower_url) }}/api/v2/projects/"
    user: "{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}"
    password: "{{ ansible_tower.admin_password }}"
    force_basic_auth: yes
    method: POST
    body: "{{ lookup('template', 'project.j2') }}"
    body_format: 'json'
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
    validate_certs: no
    status_code: 200,201,400
  register: project_output

- name: "Clear/Update facts"
  set_fact:
    credential_id: null
    org_id: ''
    processed_projects: "{{ processed_projects + [ { 'name': project.name } ] }}"
