localhost ansible_connection=local ansible_python_interpreter="/usr/bin/env python"

[all:vars]

# This will create or update a default admin (superuser) account in Tower
admin_user="{{ admin_user }}"
admin_password="{{ admin_password }}"

# Tower Secret key
# It's *very* important that this stay the same between upgrades or you will lose
# the ability to decrypt your credentials
secret_key="{{ secret_key }}"

# Database Settings
# =================

# Set pg_hostname if you have an external postgres server, otherwise
# a new postgres service will be created
# pg_hostname=postgresql

# If using an external database, provide your existing credentials.
# If you choose to use the provided containerized Postgres depolyment, these
# values will be used when provisioning the database.
pg_username="{{ pg_username }}"
pg_password="{{ pg_password }}"
pg_database="{{ pg_database }}"
pg_port="{{ pg_port }}"
pg_sslmode='prefer'  # set to 'verify-full' for client-side enforced SSL
postgress_activate_wait="{{ postgress_activate_wait}}"

# Note: The user running this installer will need cluster-admin privileges.
# Tower's job execution container requires running in privileged mode,
# and a service account must be created for auto peer-discovery to work.

# Deploy into Openshift
# =====================

openshift_host="{{ openshift_host }}"
openshift_skip_tls_verify="{{ openshift_skip_tls_verify }}"
openshift_project="{{ openshift_project}}"
openshift_user="{{ openshift_user }}"
openshift_token="{{ openshift_token }}"
# If you don't want to hardcode a password here, just do:
# ./setup_openshift.sh -e openshift_token=$TOKEN

# Skip this section if you BYO database. This is only used when you want the
# installer to deploy a containerized Postgres deployment inside of your
# OpenShift cluster. This is only recommended if you have experience storing and
# managing persistent data in containerized environments.
#
#
# Name of a PVC you've already provisioned for database:
openshift_pg_pvc_name="{{ openshift_pg_pvc_name }}"
#
# Or... use an emptyDir volume for the OpenShift Postgres pod.
# Useful for demos or testing purposes.
openshift_pg_emptydir="{{ openshift_pg_emptydir }}"

# Deploy into Vanilla Kubernetes
# ==============================

# kubernetes_context=test-cluster
# kubernetes_namespace=tower
