# Copyright 2018 Red Hat, Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

- name: "Enable repositories (with release_version)"
  command: > 
    hammer
      -u "{{ satellite_username }}"
      -p "{{ satellite_password }}"
      repository-set enable 
      --organization "{{ satellite_organization }}"
      --product "{{ item.0.product }}"
      --name "{{ item.0.name }}"
      --releasever "{{ item.1 }}"
      --basearch "{{ item.0.base_arch }}"
  with_subelements:
  - "{{ satellite_repositories }}"
  - release_version
  register: enable_repos
  failed_when:
  - enable_repos.rc != 70
  - enable_repos.rc != 0

- name: "Enable repositories (without release_version)"
  command: > 
    hammer
      -u "{{ satellite_username }}"
      -p "{{ satellite_password }}"
      repository-set enable 
      --organization "{{ satellite_organization }}"
      --product "{{ item.product }}"
      --name "{{ item.name }}"
      --basearch "{{ item.base_arch }}"
  with_items:
  - "{{ satellite_repositories }}"
  register: enable_repos
  failed_when:
  - enable_repos.rc != 70
  - enable_repos.rc != 0
  when: 
  - item.release_version|length == 0

- name: "Get Red Hat repo ids"
  shell: hammer -u "{{ satellite_username }}" -p "{{ satellite_password }}" repository list --organization "{{ satellite_organization }}" | grep "Red Hat" | awk '{print $1}'
  register: repoids

# This will take awhile, so fire-and-forget
- name: "Synchronize Red Hat repos (fire and forget)"
  command: >
    hammer
      -u "{{ satellite_username }}"
      -p "{{ satellite_password }}"
      repository synchronize
      --id "{{ item }}"
      --organization "{{ satellite_organization }}"
  async: 1000
  poll: 0
  with_items:
  - "{{ repoids.stdout.split('\n') }}"

- name: "Get tomorrow (start-date for sync plan)"
  shell: echo "$(date -d tomorrow -I) 05:00:00"
  register: sync_date

- name: "Create sync plan"
  command: >
    hammer
      -u "{{ satellite_username }}"
      -p "{{ satellite_password }}"
      sync-plan create
      --name "{{ satellite_sync_plan }}"
      --organization "{{ satellite_organization }}"
      --enabled true
      --interval daily
      --sync-date "{{ sync_date.stdout }}"
  register: chk_plan
  failed_when:
  - chk_plan.rc != 65
  - chk_plan.rc != 0

- name: "Add products to sync plan"
  command: >
    hammer
      -u "{{ satellite_username }}"
      -p "{{ satellite_password }}"
      product set-sync-plan
      --name "{{ item.product }}"
      --sync-plan "{{ satellite_sync_plan }}"
      --organization "{{ satellite_organization }}"
  with_items: 
  - "{{ satellite_repositories }}"

