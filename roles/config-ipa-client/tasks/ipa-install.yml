---

- name: "Set default values"
  set_fact:
    move_user: False

- name: "Obtain the current home dir for the ansible user"
  shell: "grep '^{{ ansible_user }}' /etc/passwd | cut -d':' -f6"
  register: current_home

- name: "Attempt to move the main users' home dir to free up /home"
  include: move-user-home.yml
  when: 
  - current_home.stdout == '/home/' ~ ansible_user

- name: "Ensure SUDO access for main user (if any)"
  lineinfile: 
    path: /etc/sudoers.d/10-idm-user
    regexp: "^{{ main_user }}" 
    line: "{{ main_user }} ALL=(ALL) NOPASSWD:ALL"
    create: yes
  when: 
  - main_user is defined
  - main_user != ""

- name: "Ensure SUDO access for group (if any)"
  lineinfile: 
    path: /etc/sudoers.d/11-idm-admin-group
    regexp: "^%{{ admin_group }}" 
    line: "%{{ admin_group }} ALL=(ALL) NOPASSWD:ALL"
    create: yes
  when: 
  - admin_group is defined
  - admin_group != ""

- name: "Set up the IPA/IdM client integration"
  command: 'ipa-client-install -U --automount-location={{ ipa_automount_location }} -p "{{ ipa_username }}" -w "{{ ipa_password }}" --domain="{{ ipa_domain }}" --force-join'

- name: "Workaround for missing sss in nsswitch.conf"
  lineinfile:
    path: /etc/nsswitch.conf
    regexp: '^automount:.*files'
    line: 'automount: files sss'
    state: present
  register: automount_line

- name: "Restart sssd if nsswitch.conf was updated"
  service:
    name: sssd
    state: restarted
  when:
  - automount_line.changed
 
- name: "Restart autofs if nsswitch.conf was updated"
  service:
    name: autofs
    state: restarted
  when:
  - automount_line.changed
